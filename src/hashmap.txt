Format: Fall24-October10
Language: ru
Title: Хеш таблица
Slug: hashmap
Categories: techie,tutorials
<p>Хеш таблица позволяет реализовать структуру данных ассоциативный массив (словарь), со средней производительностью O(1) для операций вставки, удаления, поиска.</p>
<p>Ниже пример простейшей реализации хэш мапы на nodeJS:</p>
<p><iframe loading="lazy" src="https://repl.it/@demensdeum/VitalGlitteringFrontpage?lite=true" width="100%" height="400px" frameborder="no" scrolling="no" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals" allowfullscreen="allowfullscreen"></iframe></p>
<p>Как это работает? Следим за руками:</p>
<ul>
<li>Внутри хеш мапы находится массив</li>
<li>Внутри элемента массива находится указатель на первую ноду связанного списка</li>
<li>Размечается память для массива указателей (например 65535 элементов)</li>
<li>Реализуют хеш функцию, на вход идет ключ словаря, а на выходе она может делать что угодно, но в итоге возвращает индекс элемента массива</li>
</ul>
<p>Как работает запись:</p>
<ul>
<li>На вход идет пара ключ &#8211; значение</li>
<li>Хэш функция возвращает индекс по ключу</li>
<li>Получаем ноду связанного списка из массива по индексу</li>
<li>Проверяем соответствует ли он ключу</li>
<li>Если соответствует, то заменяем значение</li>
<li>Если не соответствует, то переходим к следующей ноде, пока найдем либо, не найдем ноду с нужным ключом.</li>
<li>Если ноду так и не нашли, то создаем ее в конце связанного списка</li>
</ul>
<p>Как работает поиск по ключу:</p>
<ul>
<li>На вход идет пара ключ &#8211; значение</li>
<li>Хэш функция возвращает индекс по ключу</li>
<li>Получаем ноду связанного списка из массива по индексу</li>
<li>Проверяем соответствует ли он ключу</li>
<li>Если соответствует, то возвращаем значение</li>
<li>Если не соответствует, то переходим к следующей ноде, пока найдем либо, не найдем ноду с нужным ключом.</li>
</ul>
<p>Зачем нужен связанный список внутри массива? Из-за возможных коллизий при вычислении хеш функции. В таком случае несколько разных пар ключ-значение будут находиться по одинаковому индексу в массиве, в таком случае осуществляется проход по связанному списку с поиском необходимого ключа.</p>
<h3>Источники</h3>
<p><a href="https://ru.wikipedia.org/wiki/%D0%A5%D0%B5%D1%88-%D1%82%D0%B0%D0%B1%D0%BB%D0%B8%D1%86%D0%B0" target="_blank" rel="noopener noreferrer">https://ru.wikipedia.org/wiki/Хеш-таблица</a><br />
<a href="https://www.youtube.com/watch?v=wg8hZxMRwcw" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=wg8hZxMRwcw</a></p>
<h3>Исходный код</h3>
<p><a href="https://gitlab.com/demensdeum/datastructures" target="_blank" rel="noopener noreferrer">https://gitlab.com/demensdeum/datastructures</a></p>