Format: Fall24-October10  
Language: ru  
Title: Безопасность Docker: почему запуск от root — это плохая идея
Slug: docker-rootless
Categories: blog
Docker стал незаменимым инструментом в современном DevOps и разработке. Он позволяет изолировать окружения, упрощать деплой и быстро масштабировать приложения. Однако по умолчанию Docker требует root-доступа, и это создает потенциально опасную зону, которую часто игнорируют на ранних этапах.

<h2>Почему Docker работает от root?</h2>

Docker использует возможности ядра Linux: cgroups, namespaces, iptables, mount, networking и другие системные функции. Эти операции доступны только суперпользователю.

Вот почему:
* демон dockerd запускается от root,
* команды docker передаются этому демону.

Это упрощает работу и даёт полный контроль над системой, но вместе с этим и открывает потенциальные уязвимости.

<h2>Чем это опасно: container breakout, CVE, RCE</h2>

<h3>Container breakout</h3>

При слабой изоляции злоумышленник может:
использовать chroot или pivot_root для выхода на хост.

<h3>Уязвимости (CVE)</h3>

Примеры реальных атак:

* CVE-2019-5736 — уязвимость в runc, позволяла перезаписать приложение и выполнить код на хосте.
* CVE-2021-3156 — уязвимость в sudo, позволяла получить root внутри контейнера и выбраться наружу.

<h3>RCE (Remote Code Execution)</h3>

Если приложение в контейнере уязвимо и запускается от root, RCE = полный контроль над хостом.

<img src="https://demensdeum.com/blog/wp-content/uploads/2025/03/mediadocker-rootless.png">

<h2>Rootless Docker: решение проблемы</h2>

Чтобы минимизировать эти риски, в Docker появился rootless-режим. В этом режиме и демон, и контейнеры запускаются от имени обычного пользователя, без каких-либо root-привилегий. Это означает, что даже если злоумышленник получит контроль над контейнером, он не сможет навредить хостовой системе.
Есть и ограничения: нельзя использовать порты ниже 1024 (например, 80 и 443), недоступен режим --privileged, а также некоторые сетевые режимы. Однако в большинстве сценариев разработки и CI/CD rootless Docker прекрасно справляется со своей задачей и значительно повышает уровень безопасности.

<h2>Исторически запуск от root — антипаттерн</h2>

В мире UNIX/Linux с самого начала действует принцип наименьших привилегий. Чем меньше прав у процесса — тем меньше вреда он может нанести. Docker изначально требовал root-доступ, но сегодня это считается потенциальной угрозой.

<h2>Источники</h2>

https://docs.docker.com/engine/security/rootless/
https://rootlesscontaine.rs/
