Format: Fall24-October10
Language: ru
Title: Архитектура Flame Steel Engine Game Toolkit
Slug: flame-steel-engine-game-toolkit-architecture
Categories: techie
<p>Сегодня я расскажу об архитектуре тулкита для разработки игр <strong>Flame Steel Engine Game Toolkit</strong>.<br />
<strong>Flame Steel Engine Game Toolkit</strong> позволяет создавать игры на базе движка <strong>Flame Steel Engine</strong>:<br />
<img loading="lazy" decoding="async" class="alignnone size-full wp-image-758" src="https://demensdeum.com/blog/wp-content/uploads/2016/09/FlameSteelGameToolkitSchematics-1.png" alt="flamesteelgametoolkitschematics" width="662" height="103" srcset="https://demensdeum.com/blog/wp-content/uploads/2016/09/FlameSteelGameToolkitSchematics-1.png 662w, https://demensdeum.com/blog/wp-content/uploads/2016/09/FlameSteelGameToolkitSchematics-1-300x47.png 300w" sizes="auto, (max-width: 662px) 100vw, 662px" /></p>
<p>Все классы движка <strong>Flame Steel Engine</strong> начинаются с префикса <strong>FSE</strong> (<strong>F</strong>lame <strong>S</strong>teel <strong>E</strong>ngine), и <strong>FSEGT</strong> (<strong>F</strong>lame <strong>S</strong>teel <strong>E</strong>ngine <strong>G</strong>ame <strong>T</strong>oolkit) для тулкита.<br />
Игровая сцена, объекты, кнопки, все это подклассы <strong>FSEObject</strong> и должны находиться внутри класса <strong>FSEGTGameData</strong>. Каждый <strong>FSEObject должен </strong>реализовывать интерфейс <strong>FSESerialize</strong>, это позволит сохранять/загружать данные игры, обеспечивать механизм сохранений.<br />
<strong>FSEController</strong> класс работает с объектами класса <strong>FSEObject</strong>. Тулкит имеет базовый класс контроллера игровой сцены &#8211; <strong>FSEGTGameSceneController</strong>, вы можете наследовать данный класс для реализации своей игровой логики.<br />
<strong>IOSystem</strong> это объект интерфейса <strong>FSEGTIOSystem</strong>, этот интерфейс содержит <strong>FSEGTRenderer</strong>, <strong>FSEGTInputController</strong>, <strong>FSEGTUIRenderer</strong>.<br />
<strong>FSEGTIOSystem</strong> должен реализовывать отрисовщик (рендерер), получение данных от клавиатуры, джойстиков (устройств ввода) и обеспечивать отрисовку элементов интерфейса, для доступной <a href="https://ru.wikipedia.org/wiki/%D0%92%D0%B2%D0%BE%D0%B4-%D0%B2%D1%8B%D0%B2%D0%BE%D0%B4">системы ввода-вывода</a> данной платформы.<br />
На данный момент реализован отрисовщик, контроллер клавиатуры на основе библиотеки <a href="https://ru.wikipedia.org/wiki/Simple_DirectMedia_Layer">SDL</a>, он доступен в классе <strong>FSEGTIOSDLSystem</strong>.</p>
<figure id="attachment_759" aria-describedby="caption-attachment-759" style="width: 802px" class="wp-caption alignnone"><img loading="lazy" decoding="async" class="size-full wp-image-759" src="https://demensdeum.com/blog/wp-content/uploads/2016/09/flameSteelEngine.png" alt="Flame Steel Engine Raycaster Demo" width="802" height="625" srcset="https://demensdeum.com/blog/wp-content/uploads/2016/09/flameSteelEngine.png 802w, https://demensdeum.com/blog/wp-content/uploads/2016/09/flameSteelEngine-300x234.png 300w, https://demensdeum.com/blog/wp-content/uploads/2016/09/flameSteelEngine-768x599.png 768w" sizes="auto, (max-width: 802px) 100vw, 802px" /><figcaption id="caption-attachment-759" class="wp-caption-text">Flame Steel Engine Raycaster Demo</figcaption></figure>
<p>Планы на будущее создать IOSystem на основе <a href="https://ru.wikipedia.org/wiki/OpenGL">OpenGL</a>, класс будет называться <strong>FSEGTIOGLSystem</strong>. Если вы хотите создать IOSystem на основе какой-либо платформы, то вам необходимо использовать интерфейс <strong>FSEGTIOSystem</strong> и реализовать отрисовщик <strong>FSEGTRenderer</strong>, контроллер ввода <strong>FSEGTInputController</strong> для данной платформы.</p>
<p>Исходный код Flame Steel Engine, тулкита, игры:<br />
<a href="https://github.com/demensdeum/FlameSteelCallOfTheDeathMask">https://github.com/demensdeum/FlameSteelCallOfTheDeathMask</a></p>