Format: Fall24-October10
Language: ru
Title: Паттерн Команда
Slug: command-pattern
Categories: techie,tutorials
<p><a href="https://pixabay.com/illustrations/vegan-go-vegan-compassion-sign-1343429/" target="_blank" rel="noopener"><img loading="lazy" decoding="async" class="alignnone size-full wp-image-2327" src="https://demensdeum.com/blog/wp-content/uploads/2019/11/govegan.png" alt="" width="400" height="260" srcset="https://demensdeum.com/blog/wp-content/uploads/2019/11/govegan.png 400w, https://demensdeum.com/blog/wp-content/uploads/2019/11/govegan-300x195.png 300w" sizes="auto, (max-width: 400px) 100vw, 400px" /></a></p>
<p>Паттерн Команда относится к поведенческим паттернам проектирования.</p>
<p>Это паттерн с которым я сижу дольше остальных, он настолько прост, что очень сложен. Но лично я нахожу прелесть самообучения в том что у тебя есть все время мира чтобы исследовать определенный вопрос под всеми углами.</p>
<p>Итак, в GoF применимость описывается достаточно лаконично и понятно:<br />
<b><i>Инкапсулирует запрос как объект, позволяя настраивать (parameterize) клиентов с разными запросами, использовать очереди, логировать запросы и осуществлять операции отмены.</i></b></p>
<p>Теперь реализуем простой вариант команды из описания:</p>
<pre> <code>
string fakeTrumpsRequest = “SELECT * from Users where name beginsWith DonaldTrump”
</code> </pre>
<p>Мы инкапсулировали запрос в объект класса строки, ей можно настраивать клиентов, добавлять команды в очередь, логировать, осуществлять отмену (с использованием паттерна “Снимок”)</p>
<p>Мне кажется этого вполне достаточно для осуществления запросов SQL и подобных, однако дальше начинаются детали реализации, разные варианты применения, также очень сильно разнится кодовая база паттерна, роли клиентов, добавляются вспомогательные классы.</p>
<h3>Матчасть</h3>
<p>Паттерн команда начинается с <b>протокола Команды</b>, который содержит единственный метод <b>execute()</b>. Дальше идет <b>Конкретная Команда и Ресивер,</b> КК реализует операцию над Ресивером, описывает связь между Ресивером и действием. Ничего непонятно? Мне тоже, но поехали дальше. <b>Клиент </b>создает экземпляр <b>Конкретной Команды</b>, связывает ее с <b>Ресивером</b>. <b>Инвокер</b> &#8211; объект который осуществляет процесс запуска <b>Команды</b>.</p>
<p>Теперь попробуем разобраться на примере, допустим мы хотим обновить myOS на телефоне myPhone, для этого мы запускаем приложение myOS_Update!, в нем нажимаем кнопку Update Now!, через 10 секунд система сообщит об успешном обновлении.</p>
<p><b>Клиентом </b>в примере выше выступает приложение myOS_Update!, <b>Инвокер</b> это кнопка “Update Now!”, он запускает <b>Конкретную Команду </b>обновления системы с помощью метода execute(), которая обращается к <b>Ресиверу </b>&#8211; демону обновления операционной системы.</p>
<h3>Пример использования</h3>
<p>Допустим UI приложения myOS_Update! настолько хорош, что его решили продавать как отдельный продукт для предоставления интерфейса обновления других операционных систем. В таком случае мы реализуем приложение с поддержкой расширения через библиотеки, в библиотеках будут реализации <b>Конкретных Команд, Ресиверов,</b> оставим статичные/неизменяемые <b>Инвокер</b>, <b>Клиент</b>, протокол <b>Команды</b>.</p>
<p>Таким образом отпадает необходимость в осуществлении поддержки изменяемого кода, так как наш код останется неизменным, проблемы могут возникнут лишь при реализации на стороне клиентов, из-за ошибок в коде их <b>Конкретных Команд</b> и <b>Ресиверов</b>. Также в такой реализации отсутствует необходимость передавать исходный код основного приложения, то есть мы осуществили инкапсуляцию команд и взаимодействия UI с помощью паттерна <b>Команда</b>.</p>
<h3>Источники</h3>
<p><a href="https://refactoring.guru/ru/design-patterns/command" target="_blank" rel="noopener">https://refactoring.guru/ru/design-patterns/command</a><br />
<a href="https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612" target="_blank" rel="noopener">https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612</a></p>