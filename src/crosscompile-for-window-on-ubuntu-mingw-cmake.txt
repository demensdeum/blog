Format: Fall24-October10
Language: ru
Title: Сборка для Windows под Ubuntu MinGW CMake
Slug: crosscompile-for-window-on-ubuntu-mingw-cmake
Categories: techie,tutorials
<p>В данной заметке я опишу процесс сборки библиотек и приложений для Windows с помощью тулчейна MinGW32 на Ubuntu.<br />
Установим wine, mingw:</p>
<pre><code>
sudo apt-get install wine mingw-w64
</code></pre>
<p>После этого уже можно собирать C/C++ приложения под Windows:</p>
<pre><code>
# C
i686-w64-mingw32-gcc helloWorld.c -o helloWorld32.exe      # 32-bit
x86_64-w64-mingw32-gcc helloWorld.c -o helloWorld64.exe    # 64-bit
 
# C++
i686-w64-mingw32-g++ helloWorld.cc -o helloWorld32.exe     # 32-bit
x86_64-w64-mingw32-g++ helloWorld.cc -o helloWorld64.exe   # 64-bit
</code></pre>
<p>Собранные exe можно проверить с помощью wine.</p>
<p>Далее рассмотрим изменения сборки CMake, файла CMakeLists.txt, добавляем MinGW специфичные вещи к файлу сборки:</p>
<pre><code>
if (MINGW32)
set(CMAKE_SYSTEM_NAME Windows)
SET(CMAKE_C_COMPILER i686-w64-mingw32-gcc)
SET(CMAKE_CXX_COMPILER i686-w64-mingw32-g++)
SET(CMAKE_RC_COMPILER i686-w64-mingw32-windres)
set(CMAKE_RANLIB i686-w64-mingw32-ranlib)
endif()

// для сборки shared dll
elseif (MINGW32)
add_library(FlameSteelEngineGameToolkit.dll SHARED ${SOURCE_FILES})
else()

// обязательно линкуем со всеми зависимостями
if (MINGW32)
target_link_libraries(
                        FlameSteelEngineGameToolkit.dll 
                        -static-libgcc
                        -static-libstdc++
                        SDL2 
                        SDL2_mixer 
                        /home/demensdeum/Sources/cube-art-project-bootstrap/FlameSteelFramework/FlameSteelCore/FlameSteelCore.dll
                        /home/demensdeum/Sources/cube-art-project-bootstrap/FlameSteelFramework/FlameSteelBattleHorn/FlameSteelBattleHorn.dll
                        /home/demensdeum/Sources/cube-art-project-bootstrap/FlameSteelFramework/FlameSteelCommonTraits/FlameSteelCommonTraits.dll)

set_target_properties(FlameSteelEngineGameToolkit.dll PROPERTIES
        PREFIX ""
        SUFFIX ""
        LINK_FLAGS "-Wl,--add-stdcall-alias"
        POSITION_INDEPENDENT_CODE 0 # this is to avoid MinGW warning; 
        # MinGW generates position-independent-code for DLL by default
)
else()
</code></pre>
<p>Собираем:</p>
<pre><code>
cmake -DMINGW32=1 .
make
</code></pre>
<p>На выходе будет dll или exe, смотря что вы собираете. За рабочим примером можете смотреть в репозиторий нового проекта Cube-Art-Project и его библиотеки:<br />
<a href="https://gitlab.com/demensdeum/cube-art-project" rel="noopener noreferrer" target="_blank">https://gitlab.com/demensdeum/cube-art-project</a><br />
<a href="https://gitlab.com/demensdeum/FlameSteelEngineGameToolkitFSGL" rel="noopener noreferrer" target="_blank">https://gitlab.com/demensdeum/FlameSteelEngineGameToolkitFSGL</a><br />
<a href="https://gitlab.com/demensdeum/cube-art-project-bootstrap" rel="noopener noreferrer" target="_blank">https://gitlab.com/demensdeum/cube-art-project-bootstrap</a></p>
<p>Источники<br />
<a href="https://arrayfire.com/cross-compile-to-windows-from-linux/" rel="noopener noreferrer" target="_blank">https://arrayfire.com/cross-compile-to-windows-from-linux/</a></p>